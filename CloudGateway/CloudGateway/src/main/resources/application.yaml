server:
  port: 8085

spring:
  application:
    name: API-GATEWAY
  config:
    import: configserver:http://${CONFIG_SERVER_URL:localhost}:9296
  cloud:
    gateway:
      routes:
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE/
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri: forward:/orderServiceFallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE/
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE/
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1

      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true

okta:
  oauth2:
    issuer: https://dev-71182937.okta.com/oauth2/default
    audience: api://default
    client-id: 0oaiauj2gkHO3uxLd5d7
    client-secret: axEohrRRGBA8OP-p048tWRV6Uzgkb_HqZK32riKkKWOQ_j9GbEYZf0sR7pL6co3U
    scopes: openid, profile, email, offline_access